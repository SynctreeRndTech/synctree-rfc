2021-11-05 10:18:10  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 9628 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:18:10  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:18:10  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:18:10  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:18:11  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:18:11  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:18:11  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:18:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:18:11  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 764 ms
2021-11-05 10:18:11  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:18:11  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:18:11  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:18:11 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:23:56  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14448 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:23:56  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:23:56  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:23:56  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:23:56  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:23:56  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:23:56  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:23:56  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:23:57  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:23:57  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:23:57  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 676 ms
2021-11-05 10:23:57  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:23:57  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:23:57  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:23:57 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:24:24  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 18072 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:24:24  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:24:24  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:24:24  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:24:24  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:24:24  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:24:24  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:24:24  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:24:24  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 689 ms
2021-11-05 10:24:24  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:24:24  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:24:24  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:24:24 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:24:40  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14664 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:24:40  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:24:40  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:24:40  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:24:41  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:24:41  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:24:41  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:24:41  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:24:41  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 689 ms
2021-11-05 10:24:41  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:24:41  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:24:41  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:24:41 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:25:51  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 10900 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:25:51  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:25:51  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:25:51  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:25:51  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:25:51  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:25:51  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:25:51  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:25:51  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 676 ms
2021-11-05 10:25:51  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:25:51  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:25:51  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:25:51 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:26:10  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 13384 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:26:10  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:26:10  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:26:10  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:26:10  WARN [org.mybatis.logging.Logger] - No MyBatis mapper was found in '[com.synctree.dao]' package. Please check your configuration.
2021-11-05 10:26:10  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$eaa93ab0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:26:10  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:26:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:26:11  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 674 ms
2021-11-05 10:26:11  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.synctree.mapper.AccountMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2021-11-05 10:26:11  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 10:26:11  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 10:26:11 ERROR [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field accountMapper in com.synctree.service.AccountService required a bean of type 'com.synctree.mapper.AccountMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.synctree.mapper.AccountMapper' in your configuration.

2021-11-05 10:27:45  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:27:45  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:27:45  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:27:45  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:27:45  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:27:45  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:27:45  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:27:45  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:27:45  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:27:45  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:27:46  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:27:46  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:27:46  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 740 ms
2021-11-05 10:27:46  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:27:46  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:27:46  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:27:46  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 1.314 seconds (JVM running for 1.921)
2021-11-05 10:31:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:31:00  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:31:00  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 10:31:00  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:31:00  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:31:00  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: abb5b0e21384d8a68f84b32ea3ba3522
2021-11-05 10:31:00  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:31:00  INFO [com.synctree.rfc.RemoteFunctionCall] - [Status Code] 404, [Response Message] Not Found
2021-11-05 10:31:00 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:31:00  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:31:00 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:31:27  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.rfc.Aes256Util
2021-11-05 10:31:27  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:31:27  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 1cf41651df1751f8b2d6cc38eff7cae3
2021-11-05 10:31:27  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:31:27  INFO [com.synctree.rfc.RemoteFunctionCall] - [Status Code] 404, [Response Message] Not Found
2021-11-05 10:31:27 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:31:27 ERROR [com.synctree.rfc.RemoteFunctionCall] - ClassNotFoundException from Class.forName()
2021-11-05 10:31:48  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:31:48  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:31:48  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: da826426d029b23db3a9dfb57e6dd74b
2021-11-05 10:31:48  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:31:48  INFO [com.synctree.rfc.RemoteFunctionCall] - [Status Code] 404, [Response Message] Not Found
2021-11-05 10:31:48 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:31:48  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:31:48 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:32:43  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:32:43  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:32:43  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:32:43  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:32:43  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:32:43  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 155 ms
2021-11-05 10:32:43  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:32:43  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:43  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:32:43  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.256 seconds (JVM running for 298.815)
2021-11-05 10:32:43  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:32:50  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:32:50  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:32:51  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:32:51  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:32:51  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:32:51  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 145 ms
2021-11-05 10:32:51  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:32:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:51  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:32:51  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.241 seconds (JVM running for 306.687)
2021-11-05 10:32:51  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:32:53  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:32:53  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:32:53  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:32:53  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:32:53  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:32:53  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 135 ms
2021-11-05 10:32:53  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:32:53  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:32:53  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:32:53  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.227 seconds (JVM running for 309.434)
2021-11-05 10:32:53  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:33:00  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:33:00  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:33:00  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:33:00  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:33:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:33:00  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 134 ms
2021-11-05 10:33:00  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:33:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:33:00  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.223 seconds (JVM running for 316.316)
2021-11-05 10:33:00  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:33:16  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:33:16  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:33:16  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:33:16  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:33:16  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:33:16  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 137 ms
2021-11-05 10:33:16  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:33:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:16  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:33:16  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.247 seconds (JVM running for 332.418)
2021-11-05 10:33:16  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:33:17  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:33:17  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:33:17  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 10:33:17  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:33:17  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:33:17  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 1a9a66a5b127cb68eb12fead27c099ae
2021-11-05 10:33:17  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:33:17  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure: Status Code  404, Response Message  Not Found]
2021-11-05 10:33:17 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:33:17  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:33:17 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:33:18  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:33:18  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:33:18  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 385157860008cad26c1712d3bdb7bf20
2021-11-05 10:33:18  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:33:18  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure: Status Code  404, Response Message  Not Found]
2021-11-05 10:33:18 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:33:18  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:33:18 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:33:40  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:33:40  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:33:41  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:33:41  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:33:41  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:33:41  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 133 ms
2021-11-05 10:33:41  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:33:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:41  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:33:41  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.22 seconds (JVM running for 356.703)
2021-11-05 10:33:41  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:33:43  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:33:43  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:33:43  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 10:33:43  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:33:43  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:33:43  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 710d40f36228db5f43c7cc84487401ff
2021-11-05 10:33:43  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:33:43  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure] Status Code: 404, Response Message: Not Found
2021-11-05 10:33:43 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:33:43  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:33:43 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:33:54  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:33:54  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:33:54  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:33:54  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:33:54  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:33:54  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 138 ms
2021-11-05 10:33:54  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:33:54  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:33:54  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:33:54  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.229 seconds (JVM running for 369.721)
2021-11-05 10:33:54  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:33:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:33:56  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:33:56  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 10:33:56  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:33:56  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:33:56  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: d02a0200e917e7f80fe3f374d0c3e058
2021-11-05 10:33:56  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:33:57  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 404, Response Message: Not Found
2021-11-05 10:33:57 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:33:57  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:33:57 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:34:36  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:34:36  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:34:36  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: b185867fb6a72e9c356a53c05f2ffd16
2021-11-05 10:34:36  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:34:36  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 404, Response Message: Not Found
2021-11-05 10:34:36 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:34:36  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:34:36 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:34:38  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:34:38  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:34:38  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 5da53fb4ffb8f967083662c110c6d1a6
2021-11-05 10:34:38  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:34:38  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 404, Response Message: Not Found
2021-11-05 10:34:38 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 404, [ErrorMsg] Not Found
2021-11-05 10:34:38  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:34:38 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:34:51  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 7720 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:34:51  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:34:51  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:34:51  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:34:51  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:34:51  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 130 ms
2021-11-05 10:34:51  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:34:51  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:34:51  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:34:51  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.215 seconds (JVM running for 426.784)
2021-11-05 10:34:51  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:34:54  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:34:54  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:34:54  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 10:34:54  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:34:54  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:34:54  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: b3721ffc3d3c8702ac016db708b5ee2f
2021-11-05 10:34:54  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:34:54  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 10:34:54 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 10:34:54  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:34:54 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:34:58  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:34:58  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:34:58  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: f36d2c0ffa24459e0f756432ef961f3f
2021-11-05 10:34:58  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:34:58  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 10:34:58 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 10:34:58  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:34:58 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:35:39  INFO [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2021-11-05 10:35:43  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:35:43  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:35:43  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 10:35:43  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 10:35:44  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:35:44  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:35:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:35:44  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 687 ms
2021-11-05 10:35:44  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:35:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:35:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:35:44  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 1.238 seconds (JVM running for 1.826)
2021-11-05 10:35:46  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:35:46  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:35:46  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 10:35:46  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:35:46  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:35:46  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 8c0aabc2449f91b50f2317d669db4ca2
2021-11-05 10:35:46  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:35:46  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 10:35:46 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 10:35:46  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:35:46 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:36:00  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:36:00  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:36:00  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:36:00  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:36:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:36:00  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 177 ms
2021-11-05 10:36:00  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:36:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:36:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:36:00  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.289 seconds (JVM running for 17.678)
2021-11-05 10:36:00  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:36:02  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:36:02  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:36:02  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: 1b53ef87ab5668838e5c54d17d61fbbb
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - sun.net.www.protocol.https.DelegateHttpsURLConnection:https://dev.synctreengine.com/secure/getCommand
2021-11-05 10:36:02  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 10:36:02 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 10:36:02  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:36:02 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:37:00  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:37:00  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:37:00  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:37:00  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:37:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:37:00  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 147 ms
2021-11-05 10:37:00  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:37:00  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:37:00  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:37:00  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.242 seconds (JVM running for 77.174)
2021-11-05 10:37:00  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 10:37:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 10:37:01  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 10:37:01  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 10:37:01  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 10:37:01  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 10:37:01  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: cd28d5a3047f133a8ca90e7d0030757f
2021-11-05 10:37:01  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 10:37:01  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 10:37:01 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 10:48:11  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 10:48:11  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 10:48:11  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 10:48:11  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 10:48:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 10:48:11  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 133 ms
2021-11-05 10:48:11  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 10:48:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 10:48:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 10:48:11  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.223 seconds (JVM running for 748.905)
2021-11-05 10:48:11  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 11:03:03  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 11:03:03  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 11:03:03  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 11:03:03  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Starting...
2021-11-05 11:03:03  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Start completed.
2021-11-05 11:03:16  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated...
2021-11-05 11:03:16  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed.
2021-11-05 11:03:16  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:03:16  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:03:16  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:03:16  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:03:16  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:03:16  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 129 ms
2021-11-05 11:03:16  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

2021-11-05 11:03:16  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 11:03:16  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 11:03:16 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]
	at com.synctree.rfc.SynctreeRfcApplication.main(SynctreeRfcApplication.java:12) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.5.4.jar:2.5.4]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at com.synctree.mapper.AccountMapper.<clinit>(AccountMapper.java:14) ~[classes/:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:466) ~[?:?]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(XMLMapperBuilder.java:423) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:97) ~[mybatis-3.5.7.jar:3.5.7]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at com.synctree.config.MyBatisConfig.SqlSessionFactory(MyBatisConfig.java:42) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.CGLIB$SqlSessionFactory$1(<generated>) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c$$FastClassBySpringCGLIB$$d8f27332.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.9.jar:5.3.9]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.9.jar:5.3.9]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.SqlSessionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
2021-11-05 11:03:21  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:03:21  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:03:21  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:03:21  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:03:21  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:03:21  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 136 ms
2021-11-05 11:03:21  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

2021-11-05 11:03:21  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 11:03:21  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 11:03:21 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]
	at com.synctree.rfc.SynctreeRfcApplication.main(SynctreeRfcApplication.java:12) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.5.4.jar:2.5.4]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at com.synctree.mapper.AccountMapper.<clinit>(AccountMapper.java:14) ~[classes/:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:466) ~[?:?]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(XMLMapperBuilder.java:423) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:97) ~[mybatis-3.5.7.jar:3.5.7]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at com.synctree.config.MyBatisConfig.SqlSessionFactory(MyBatisConfig.java:42) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.CGLIB$SqlSessionFactory$1(<generated>) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c$$FastClassBySpringCGLIB$$d8f27332.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.9.jar:5.3.9]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.9.jar:5.3.9]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.SqlSessionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
2021-11-05 11:03:22  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:03:22  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:03:22  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:03:22  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:03:22  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:03:22  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:22  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:03:22  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:03:23  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:03:23  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:03:23  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 125 ms
2021-11-05 11:03:23  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

2021-11-05 11:03:23  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 11:03:23  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 11:03:23 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]
	at com.synctree.rfc.SynctreeRfcApplication.main(SynctreeRfcApplication.java:12) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.5.4.jar:2.5.4]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at com.synctree.mapper.AccountMapper.<clinit>(AccountMapper.java:14) ~[classes/:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:466) ~[?:?]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(XMLMapperBuilder.java:423) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:97) ~[mybatis-3.5.7.jar:3.5.7]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at com.synctree.config.MyBatisConfig.SqlSessionFactory(MyBatisConfig.java:42) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.CGLIB$SqlSessionFactory$1(<generated>) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c$$FastClassBySpringCGLIB$$d8f27332.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.9.jar:5.3.9]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.9.jar:5.3.9]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.SqlSessionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
2021-11-05 11:03:26  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:03:26  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:03:26  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:03:26  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:03:26  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:03:26  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 125 ms
2021-11-05 11:03:26  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

2021-11-05 11:03:26  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 11:03:26  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 11:03:26 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]
	at com.synctree.rfc.SynctreeRfcApplication.main(SynctreeRfcApplication.java:12) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.5.4.jar:2.5.4]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: java.lang.Error: Unresolved compilation problem: 
	UserMapper cannot be resolved to a type

	at com.synctree.mapper.AccountMapper.<clinit>(AccountMapper.java:14) ~[classes/:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:466) ~[?:?]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(XMLMapperBuilder.java:423) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:97) ~[mybatis-3.5.7.jar:3.5.7]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at com.synctree.config.MyBatisConfig.SqlSessionFactory(MyBatisConfig.java:42) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.CGLIB$SqlSessionFactory$1(<generated>) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c$$FastClassBySpringCGLIB$$d8f27332.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.9.jar:5.3.9]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.9.jar:5.3.9]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$76bafe6c.SqlSessionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
2021-11-05 11:03:34  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14124 (C:\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:03:34  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:03:34  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$562b6b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:03:34  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:03:34  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:03:34  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 124 ms
2021-11-05 11:03:34  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 11:03:34  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 11:03:34  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 11:03:34  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.205 seconds (JVM running for 1671.432)
2021-11-05 11:03:34  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 11:03:39  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 11:03:39  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 11:03:39  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 1 ms
2021-11-05 11:03:39  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Starting...
2021-11-05 11:03:39  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Start completed.
2021-11-05 11:17:38  INFO [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2021-11-05 11:17:38  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown initiated...
2021-11-05 11:17:38  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown completed.
2021-11-05 11:23:56  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 11:23:56  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 11:23:56  INFO [org.springframework.boot.logging.DeferredLog] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-11-05 11:23:56  INFO [org.springframework.boot.logging.DeferredLog] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-11-05 11:23:56  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 11:23:56  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 11:23:56  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 11:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 11:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 11:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 11:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 11:23:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 11:23:56  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 676 ms
2021-11-05 11:23:57  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 11:23:57  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 11:23:57  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 11:23:57  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 1.248 seconds (JVM running for 1.896)
2021-11-05 11:29:29  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 11:29:29  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 11:29:29  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 11:29:29  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 11:29:29  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 11:29:29  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: ca988b45f82e89a02cb2e2ed2fc04072
2021-11-05 11:29:29  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 11:29:29  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 11:29:29 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 11:29:29  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 11:29:29 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 11:29:40  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 11:29:40  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 11:29:40  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: c46fc4fec978bff10890826bce4785a5
2021-11-05 11:29:40  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 11:29:40  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 11:29:40 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 11:29:40  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 11:29:40 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 14:25:33  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:25:33  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:25:33  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:25:33  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:25:33  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:25:33  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 186 ms
2021-11-05 14:25:33  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:25:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:25:33  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:25:33  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.307 seconds (JVM running for 10899.85)
2021-11-05 14:25:33  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:26:01  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:26:01  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:26:01  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:26:01  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:26:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:26:01  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 141 ms
2021-11-05 14:26:01  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:26:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:26:01  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.232 seconds (JVM running for 10928.208)
2021-11-05 14:26:01  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:26:17  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:26:17  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:26:17  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:26:17  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:26:17  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:26:17  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 134 ms
2021-11-05 14:26:17  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:26:17  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:17  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:26:17  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.222 seconds (JVM running for 10944.274)
2021-11-05 14:26:17  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:26:38  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:26:38  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:26:39  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:26:39  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:26:39  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:26:39  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 131 ms
2021-11-05 14:26:39  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:26:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:39  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:26:39  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.216 seconds (JVM running for 10965.45)
2021-11-05 14:26:39  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:26:44  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:26:44  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:26:44  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:26:44  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:26:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:26:44  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 127 ms
2021-11-05 14:26:44  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:26:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:26:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:26:44  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.212 seconds (JVM running for 10971.256)
2021-11-05 14:26:44  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:36:33  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:36:33  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:36:33  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:36:33  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:36:33  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:36:33  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 137 ms
2021-11-05 14:36:33  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:36:33  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:36:33  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:36:33  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.22 seconds (JVM running for 11559.591)
2021-11-05 14:36:33  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:00  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:00  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:01  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:01  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:01  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 128 ms
2021-11-05 14:38:01  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:01  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.211 seconds (JVM running for 11647.463)
2021-11-05 14:38:01  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:02  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:02  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:02  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:02  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:02  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:02  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 128 ms
2021-11-05 14:38:02  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:02  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:02  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:02  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.21 seconds (JVM running for 11649.169)
2021-11-05 14:38:02  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:14  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:14  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:14  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:14  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:14  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:14  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 129 ms
2021-11-05 14:38:14  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:14  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:14  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.212 seconds (JVM running for 11661.147)
2021-11-05 14:38:14  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:29  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:29  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:29  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:29  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:29  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:29  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 123 ms
2021-11-05 14:38:29  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:29  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:29  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:29  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.207 seconds (JVM running for 11676.13)
2021-11-05 14:38:29  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:41  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:41  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:41  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:41  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:41  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:41  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 136 ms
2021-11-05 14:38:41  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:41  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:41  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:41  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.216 seconds (JVM running for 11688.084)
2021-11-05 14:38:41  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:46  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:46  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:46  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:46  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:46  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:46  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 126 ms
2021-11-05 14:38:46  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:46  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:46  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:46  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.203 seconds (JVM running for 11692.837)
2021-11-05 14:38:46  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:38:58  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:38:58  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:38:58  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:38:58  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:38:58  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:38:58  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 126 ms
2021-11-05 14:38:58  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:38:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:38:58  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:38:58  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.204 seconds (JVM running for 11704.795)
2021-11-05 14:38:58  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:39:03  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 14:39:03  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 14:39:03  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 14:39:40  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Starting...
2021-11-05 14:39:40  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Start completed.
2021-11-05 14:41:39  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated...
2021-11-05 14:41:39  INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed.
2021-11-05 14:41:39  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:41:39  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:41:39  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:41:39  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:41:39  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:41:39  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 125 ms
2021-11-05 14:41:39  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:41:39  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:41:39  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:41:39  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.205 seconds (JVM running for 11866.194)
2021-11-05 14:41:39  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:41:43  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:41:43  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:41:43  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:41:43  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:41:43  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:41:43  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 127 ms
2021-11-05 14:41:43  WARN [org.springframework.context.support.AbstractApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

2021-11-05 14:41:43  INFO [org.apache.juli.logging.DirectJDKLog] - Stopping service [Tomcat]
2021-11-05 14:41:43  INFO [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-11-05 14:41:43 ERROR [org.springframework.boot.SpringApplication] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.9.jar:5.3.9]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.4.jar:2.5.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.4.jar:2.5.4]
	at com.synctree.rfc.SynctreeRfcApplication.main(SynctreeRfcApplication.java:12) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.5.4.jar:2.5.4]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountService': Unsatisfied dependency expressed through field 'accountMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountMapper' defined in file [C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes\com\synctree\mapper\AccountMapper.class]: Cannot resolve reference to bean 'SqlSessionFactory' while setting bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'SqlSessionFactory' defined in class path resource [com/synctree/config/MyBatisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'SqlSessionFactory' threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
Caused by: java.lang.Error: Unresolved compilation problems: 
	Syntax error, insert "Dimensions" to complete ReferenceType
	Return type for the method is missing

	at com.synctree.mapper.AccountMapper.<clinit>(AccountMapper.java:18) ~[classes/:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:466) ~[?:?]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(XMLMapperBuilder.java:423) ~[mybatis-3.5.7.jar:3.5.7]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:97) ~[mybatis-3.5.7.jar:3.5.7]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:611) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:491) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:633) ~[mybatis-spring-2.0.6.jar:2.0.6]
	at com.synctree.config.MyBatisConfig.SqlSessionFactory(MyBatisConfig.java:42) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a6451038.CGLIB$SqlSessionFactory$1(<generated>) ~[classes/:?]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a6451038$$FastClassBySpringCGLIB$$92dff9e2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.9.jar:5.3.9]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.9.jar:5.3.9]
	at com.synctree.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a6451038.SqlSessionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1689) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.9.jar:5.3.9]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.9.jar:5.3.9]
	... 25 more
2021-11-05 14:41:58  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:41:58  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:41:58  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:41:58  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:41:58  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:41:58  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 131 ms
2021-11-05 14:41:58  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:41:58  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:41:58  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:41:58  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.218 seconds (JVM running for 11884.886)
2021-11-05 14:41:58  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:42:11  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:42:11  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:42:11  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:42:11  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:42:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:42:11  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 125 ms
2021-11-05 14:42:11  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:42:11  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:11  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:42:11  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.213 seconds (JVM running for 11897.665)
2021-11-05 14:42:11  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:42:16  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:42:16  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:42:16  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:42:16  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:42:16  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:42:16  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:42:16  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:42:17  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:42:17  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:42:17  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 127 ms
2021-11-05 14:42:17  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:42:17  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:17  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:42:17  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.204 seconds (JVM running for 11903.394)
2021-11-05 14:42:17  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:42:40  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:42:40  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:42:40  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:42:40  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:42:40  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:42:40  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 123 ms
2021-11-05 14:42:40  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:42:40  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:40  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:42:40  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.203 seconds (JVM running for 11927.237)
2021-11-05 14:42:40  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:42:44  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:42:44  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:42:44  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:42:44  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:42:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:42:44  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 120 ms
2021-11-05 14:42:44  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:42:44  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:42:44  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:42:44  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.196 seconds (JVM running for 11930.906)
2021-11-05 14:42:44  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:43:06  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:43:06  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:43:06  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:43:06  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:43:06  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:43:06  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 124 ms
2021-11-05 14:43:06  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:43:06  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:43:06  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:43:06  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.213 seconds (JVM running for 11952.901)
2021-11-05 14:43:06  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 14:43:14  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 14:43:14  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 14:43:14  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 14:43:14  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 14:43:14  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 14:43:14  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 121 ms
2021-11-05 14:43:14  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 14:43:14  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 14:43:14  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 14:43:14  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.198 seconds (JVM running for 11960.705)
2021-11-05 14:43:14  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 15:30:01  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 15:30:01  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 15:30:01  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 15:30:01  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 15:30:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 15:30:01  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 122 ms
2021-11-05 15:30:01  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 15:30:01  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 15:30:01  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 15:30:01  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.198 seconds (JVM running for 14767.893)
2021-11-05 15:30:01  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 15:30:20  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 15:30:20  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 15:30:20  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 15:30:20  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 15:30:20  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 15:30:20  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 120 ms
2021-11-05 15:30:20  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 15:30:20  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 15:30:20  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 15:30:20  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.195 seconds (JVM running for 14787.023)
2021-11-05 15:30:20  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 16:09:13  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-11-05 16:09:13  INFO [org.springframework.web.servlet.FrameworkServlet] - Initializing Servlet 'dispatcherServlet'
2021-11-05 16:09:13  INFO [org.springframework.web.servlet.FrameworkServlet] - Completed initialization in 0 ms
2021-11-05 16:09:13  INFO [com.synctree.rfc.RemoteFunctionCall] - [className]: com.synctree.service.Aes256Util
2021-11-05 16:09:13  INFO [com.synctree.rfc.RemoteFunctionCall] - [functionName]: AES256Func
2021-11-05 16:09:13  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Secure-Key]: ee65869c13838d5e11e8312ae54d90de
2021-11-05 16:09:13  INFO [com.synctree.rfc.RemoteFunctionCall] - [X-Synctree-Verification-Code]: aa4654baghe546
2021-11-05 16:09:13  INFO [com.synctree.rfc.RemoteFunctionCall] - [Secure Response] Status Code: 500, Response Message: Internal Server Error
2021-11-05 16:09:13 ERROR [com.synctree.rfc.RemoteFunctionCall] - [ErrorCode] 500, [ErrorMsg] Internal Server Error
2021-11-05 16:09:13  INFO [com.synctree.service.Aes256Util] - AES_Encode/Decode Method Call Succeed
2021-11-05 16:09:13 ERROR [com.synctree.rfc.RemoteFunctionCall] - InvocationTargetExceptionn from invoke()
2021-11-05 16:48:35  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 16:48:35  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 16:48:35  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 16:48:35  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 16:48:35  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 16:48:35  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 150 ms
2021-11-05 16:48:35  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 16:48:35  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 16:48:35  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 16:48:35  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.249 seconds (JVM running for 19482.061)
2021-11-05 16:48:35  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 16:53:45  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 16:53:45  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 16:53:45  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 16:53:45  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 16:53:45  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 16:53:45  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 125 ms
2021-11-05 16:53:45  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 16:53:45  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 16:53:45  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 16:53:45  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.2 seconds (JVM running for 19791.641)
2021-11-05 16:53:45  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 16:53:49  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 16:53:49  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 16:53:49  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 16:53:49  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 16:53:49  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 16:53:49  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 16:53:49  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 16:53:49  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 16:53:50  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 16:53:50  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 16:53:50  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 121 ms
2021-11-05 16:53:50  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 16:53:50  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 16:53:50  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 16:53:50  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.194 seconds (JVM running for 19796.4)
2021-11-05 16:53:50  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 16:59:56  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 16:59:56  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 16:59:56  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 16:59:56  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 16:59:56  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 16:59:56  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 122 ms
2021-11-05 16:59:56  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 16:59:56  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 16:59:56  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 16:59:56  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.197 seconds (JVM running for 20163.067)
2021-11-05 16:59:56  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 17:00:08  INFO [org.springframework.boot.StartupInfoLogger] - Starting SynctreeRfcApplication using Java 16.0.2 on DESKTOP-4HH6JA9 with PID 14744 (C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC\target\classes started by User in C:\Projects\SyncTreeRFC\synctree-rfc\SynctreeRFC)
2021-11-05 17:00:08  INFO [org.springframework.boot.SpringApplication] - No active profile set, falling back to default profiles: default
2021-11-05 17:00:08  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$85b57d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-11-05 17:00:08  INFO [org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-11-05 17:00:08  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8070 (http)
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing ProtocolHandler ["http-nio-8070"]
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - Starting service [Tomcat]
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - Initializing Spring embedded WebApplicationContext
2021-11-05 17:00:08  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 122 ms
2021-11-05 17:00:08  INFO [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2021-11-05 17:00:08  INFO [org.apache.juli.logging.DirectJDKLog] - Starting ProtocolHandler ["http-nio-8070"]
2021-11-05 17:00:08  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8070 (http) with context path ''
2021-11-05 17:00:08  INFO [org.springframework.boot.StartupInfoLogger] - Started SynctreeRfcApplication in 0.196 seconds (JVM running for 20174.985)
2021-11-05 17:00:08  INFO [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2021-11-05 17:02:21  INFO [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
